@model ZPP_Project.Models.GradeEditViewModel

@{
    ViewBag.Title = "Grades";
}

<h2>@ViewBag.Title</h2>

<div class="container">
    <div class="row">
        <div class="col-md-2">
            Course:
        </div>
        <div class="col-md-5">
            @Model.CourseName
        </div>
    </div>
    <div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Items[i].IdGrade, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Items[i].IdGrade, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Items[i].IdGrade, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Items[i].IdStudent, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Items[i].IdStudent, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Items[i].IdStudent, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Items[i].StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Items[i].StudentName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Items[i].IdCourse, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Items[i].IdCourse, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Items[i].IdCourse, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Items[i].Grade, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Items[i].Grade, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Items[i].Grade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Items[i].Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Items[i].Date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Items[i].IdTeacher, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Items[i].IdTeacher, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Items[i].IdTeacher, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Items[i].Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Items[i].Comment, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Items[i].Comment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-1">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                    <div class="col-md-offset-1 col-md-1">
                        <input type="button" value="Cancel" class="btn btn-default" onclick="history.back()" />
                    </div>
                </div>
            </div>
        }
    </div>

</div>