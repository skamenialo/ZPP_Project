@using ZPP_Project.Helpers;
@model ZPP_Project.Models.LectureCreateEditItemViewModel

<div class="row form-horizontal">
    <div class="form-group">
        @if (Model.Edit)
        {
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.IdTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.IdTeacher, new SelectList(Model.Teachers, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTeacher, "", new { @class = "text-danger" })
            </div>
        }
        else
        {
            <div class="col-md-1">
                @(Model.Index+1).
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", name = "model.Lectures[0].Date"} })
            </div>
            <div class="form-horizontal">
                @if (!(string.IsNullOrWhiteSpace(Model.IdTeacher) || Model.IdTeacher == "none"))
                {
                    @TeacherHelper.Display(Model.IdTeacher)
                }
                else
                {
                    <span>Not selected</span>
                }
            </div>
            @Html.HiddenFor(model => model.Index, new { name = "model.Lectures[" + Model.Index + "].Index" })
            @Html.HiddenFor(model => model.Date, new { name = "model.Lectures[" + Model.Index + "].Date" })
            @Html.HiddenFor(model => model.IdTeacher, new { name = "model.Lectures[" + Model.Index + "].IdTeacher" })
        }
    </div>
</div>
