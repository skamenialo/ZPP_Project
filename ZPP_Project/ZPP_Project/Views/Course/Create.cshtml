@using ZPP_Project.Helpers;
@model ZPP_Project.Models.CreateCourseViewModel
@{
    ViewBag.Title = "Create Course";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "Course", FormMethod.Post, new { id = "form-create", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (ZPPUserRoleHelper.IsAdministrator(ViewBag.UserRoleId))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.IdCompany, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.IdCompany, new SelectList(Model.Companies, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdCompany, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (ZPPUserRoleHelper.IsCompany(ViewBag.UserRoleId) || !string.IsNullOrWhiteSpace(Model.IdTeacher))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.IdTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (ZPPUserRoleHelper.IsCompany(ViewBag.UserRoleId))
                    {
                        @Html.DropDownListFor(m => m.IdTeacher, new SelectList(Model.Teachers, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdTeacher, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        TeacherHelper.Display(Model.IdTeacher);
                        @Html.HiddenFor(m => m.IdTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.IdTeacher, "", new { @class = "text-danger" })
                    }
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lectures, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Lectures[0].Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Lectures[0].IdTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                </div>
                <div class="row">
                    @Html.EditorFor(model => model.Lectures)
                </div>
                <div class="row">
                    <input type="submit" name="add_lecture" value="Add lecture" class="btn btn-default" onclick="ClearGet('#form-create', 'Create')" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="create" value="Create" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
